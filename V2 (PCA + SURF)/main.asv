%Superfície     Código
%------------------------
%Capim          RT21
%Folhas         RT7
%Madeira        RT19
%Piso           RT22
%Rochas         RT3
%Tapete         RT24
%Tijolos        RT8

clear all, close all 

cd('C:\Users\Iron Santana Filho\Desktop\COLLEGE\Faculdade\Processamento Digital de Imagens\Trabalho Final\PCA_PDI-master\');
path = 'C:\Users\Iron Santana Filho\Desktop\COLLEGE\Faculdade\Processamento Digital de Imagens\Trabalho Final\Dataset\'; 

%Leitura da base de dados
imds = imageDatastore(path,'IncludeSubfolders',true,'LabelSource','foldernames');
bag = bagOfFeatures(imds, 'StrongestFeatures', 1.0, 'PointSelection', 'Detector', 'VocabularySize', 380);

n_executions = 3; %Número de execuções
n_class = 7; %Total de classes
accuracy_class_media(:, n_class) = 0; %Vetor com as médias de acurácia de acertos por classe
hits_accuracy = zeros(1, n_executions); %Vetor com as acurácias de acerto
faults_accuracy = zeros(1, n_executions); %Vetor com as acurácias de erro
hits_testCell(n_executions, :) = 0; %Matriz com todos os acertos de teste
hits_trainCell(n_executions, :) = 0; %Matriz com todos os acertos de treino
faults_testCell(n_executions, :) = 0; %Matriz com todos os erros de teste
faults_trainCell(n_executions, :) = 0; %Matriz com todos os erros de treino
s_hits_accuracy = 0;
s_faults_accuracy = 0;
best_accuracy = 0; %Melhor acurácia de todas as execuç
flagHit = 0; %Verifica se em uma das execuções teve pelo menos 1 acerto
flagFault = 0; %Verifica se em uma das execuções teve pelo menos 1 erro
 
for k = 1:n_executions
    %Seleção das imagens para treino e teste
    [trainCell, testCell] = splitEachLabel(imds, 0.7, 'randomized');

    n_test = size(testCell.Files, 1); %Número de testes
    n_train = size(trainCell.Files, 1); %Número de treinos
    train = n_train /n_class; %Número de Treino por classes 
    test = n_test /n_class; %Número de Teste por classes 
    sample = train + test; %Amostra
    
    %Geração da base de treinamento
    data_train = lerImgs(trainCell, n_train, bag);
    
    %Geraçãos de PCS
    [P, PC, mn] = GerarPCs(data_train);

    %Declaração de variáveis
    hits = 0;
    faults = 0;
    hits_class = zeros(1, n_class);
    accuracy_class = zeros(1, n_class);
    
    %Realização dos testes
    for i=1:n_test
        img_test = readimage(testCell, i);
        img_test = imresize(img_test, [256 256]);
        bag_features = encode(bag, img_test, 'Normalization', 'L2');
        d = Classificar(PC, ProjetarAmostra(bag_features, mn, P));

        %Cálculo e armazenamento dos acertos e erros
        if trainCell.Labels(d) == testCell.Labels(i)
            flagHit = 1;
            
            pos_class = ceil(d/train);
            hits_class(pos_class) = hits_class(pos_class) + 1;
            
            hits = hits + 1;
            hits_trainCell(k, hits) = d;
            hits_testCell(k, hits) = i;
        else
            flagFault = 1;
            
            faults = faults + 1;
            faults_trainCell(k, faults) = d;
            faults_testCell(k, faults) = i;
        end
    end
    
    %Cálculo da acurácia de acertos e erros de uma execução x
    hits_accuracy(k) = (hits/n_test)*100;
    faults_accuracy(k) = (faults/n_test)*100;
    
    %Verificação da melhor acurácia
    if hits_accuracy(k) > best_accuracy
        best_accuracy = hits_accuracy(k);
    end
    
    %Somatório de todas as acúracias de acertos e erros
    s_hits_accuracy = s_hits_accuracy +  hits_accuracy(k);
    s_faults_accuracy = s_faults_accuracy +  faults_accuracy(k);
    
    %Exibição dos resultados para cada execução
    disp("Execução número: " + num2str(k));
    disp("Índice de acertos: " + num2str(hits_accuracy(k)) + "%");
    disp("Índice de erros: " + num2str(faults_accuracy(k)) + "%");
    disp("Quantidade de imagens de teste: " + num2str(n_test));
    disp("Quantidade de acertos: " + num2str(hits));
    for i = 1:n_class
        accuracy_class(i) = (hits_class(i)/test)*100;
        disp("Acurácia Classe " + char(trainCell.Labels(i*train)) + ' = ' + num2str(accuracy_class(i)) + "%");
        accuracy_class_media(i) = accuracy_class_media(i) + accuracy_class(i);
    end
    disp("-----------------------------------------------");
end

%Cálculo da média de acurácias de acertos e erros
media_hits_accuracy = s_hits_accuracy/n_executions;
media_faults_accuracy = s_faults_accuracy/n_executions;

%Exibição final dos resultados
disp(" ");
disp("***********************************************");
disp("Média de acertos: " + num2str(media_hits_accuracy) + "%");
disp("Média de erros: " + num2str(media_faults_accuracy) + "%");
disp("Melhor acurácia: " + num2str(best_accuracy) + "%");
for i=1:n_class
    accuracy_class_media(i) = accuracy_class_media(i)/n_executions;
    disp("Acurácia Classe " + char(trainCell.Labels(i*train)) + ' = ' + num2str(accuracy_class_media(i)) + "%");
end
disp("***********************************************");

%Exemplo de acerto (se tiver)
if flagHit ~= 0
    img_train_hit = readimage(trainCell, hits_trainCell(n_executions, 1));
    img_test_hit = readimage(testCell, hits_testCell(n_executions, 1));

    figure; imshowpair(img_train_hit, img_test_hit, 'montage');

    title("Exemplo de Acerto");
end

%Exemplo de erro (se tiver)
if flagFault ~= 0
    img_train_fault = readimage(trainCell, faults_trainCell(n_executions, 1));
    img_test_fault = readimage(testCell, faults_testCell(n_executions, 1));

    figure; imshowpair(img_train_fault, img_test_fault, 'montage');

    title("Exemplo de Erro");
end